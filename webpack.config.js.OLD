const { resolve } = require('path');
const webpack = require('webpack');
const { WDS_PORT, isProd, STATIC_PATH } = require('./src/client/config');

module.exports = {
  // base directory to resolve entry points regardless of OS
  context: resolve(__dirname, 'src'),
  entry: [
    'react-hot-loader/patch',
    // `webpack-dev-server/client?http://localhost:${WDS_PORT}`,
    // 'webpack/hot/only-dev-server',
    './client',
  ],
  output: {
    filename: 'js/bundle.js', // filename: 'build.js'
    path: resolve(__dirname, 'dist'), // path: resolve(__dirname, 'public', 'javascripts'), // resolves path for both public and javascripts folder
    publicPath: isProd ? `${STATIC_PATH}/` : `http://localhost:${WDS_PORT}/dist/`, //publicPath: '/javascripts',
  },
  devtool: isProd ? false : 'source-map', // devtool: 'inline-source-map',
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /(node_modules|bower_compoents|public\/)/,
        loader: 'babel-loader',
      },
    ],
  },
  resolve: {
    extensions: ['.js', '.jsx'],
  },
  performance: {
    hints: 'warning',
  },
  devServer: {
    // contentBase: resolve(__dirname, 'dist'), // content base path = app base path
    // publicPath: '/', // isProd ? `${STATIC_PATH}/` : `http://localhost:${WDS_PORT}/dist/`, //publicPath: '/javascripts',
    port: WDS_PORT,
    // // respond to 404s with index.html
    // historyApiFallback: true,
    // enable HMR on the server
    hot: true,
    // requires CORS for access from different port
    headers: {
      'Access-Control-Allow-Origin': '*',
    },
  },
  plugins: [
    // enable HMR globally
    new webpack.HotModuleReplacementPlugin(),
    // prints more readable module names in the browser console on HMR updates
    new webpack.NamedModulesPlugin(),
    // do not emit compiled assets that include errors
    new webpack.NoEmitOnErrorsPlugin(),
  ],
};
